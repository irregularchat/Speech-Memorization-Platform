# Generated by Django 5.2.4 on 2025-07-12 13:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('memorization', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PerformanceTrend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trend_type', models.CharField(choices=[('accuracy', 'Accuracy'), ('speed', 'Speed'), ('consistency', 'Consistency'), ('mastery', 'Mastery')], max_length=20)),
                ('date', models.DateField()),
                ('value', models.FloatField()),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='memorization.practicesession')),
                ('text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='memorization.text')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='UserAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('total_practice_time', models.PositiveIntegerField(default=0)),
                ('total_words_practiced', models.PositiveIntegerField(default=0)),
                ('total_words_correct', models.PositiveIntegerField(default=0)),
                ('average_accuracy', models.FloatField(default=0.0)),
                ('best_accuracy', models.FloatField(default=0.0)),
                ('improvement_rate', models.FloatField(default=0.0)),
                ('current_streak', models.PositiveIntegerField(default=0)),
                ('longest_streak', models.PositiveIntegerField(default=0)),
                ('last_practice_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_type', models.CharField(choices=[('streak', 'Practice Streak'), ('accuracy', 'Accuracy Milestone'), ('time', 'Practice Time'), ('mastery', 'Text Mastery'), ('sessions', 'Session Count'), ('words', 'Words Practiced')], max_length=20)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('threshold_value', models.FloatField()),
                ('achieved_value', models.FloatField()),
                ('achieved_at', models.DateTimeField(auto_now_add=True)),
                ('text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='memorization.text')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-achieved_at'],
                'unique_together': {('user', 'achievement_type', 'threshold_value')},
            },
        ),
        migrations.CreateModel(
            name='DailyStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('sessions_count', models.PositiveIntegerField(default=0)),
                ('practice_time', models.PositiveIntegerField(default=0)),
                ('words_practiced', models.PositiveIntegerField(default=0)),
                ('words_correct', models.PositiveIntegerField(default=0)),
                ('average_accuracy', models.FloatField(default=0.0)),
                ('texts_practiced', models.ManyToManyField(blank=True, to='memorization.text')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='MonthlyStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('month', models.PositiveIntegerField()),
                ('sessions_count', models.PositiveIntegerField(default=0)),
                ('practice_time', models.PositiveIntegerField(default=0)),
                ('words_practiced', models.PositiveIntegerField(default=0)),
                ('words_correct', models.PositiveIntegerField(default=0)),
                ('average_accuracy', models.FloatField(default=0.0)),
                ('days_practiced', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-year', '-month'],
                'unique_together': {('user', 'year', 'month')},
            },
        ),
        migrations.CreateModel(
            name='TextAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessions_count', models.PositiveIntegerField(default=0)),
                ('total_practice_time', models.PositiveIntegerField(default=0)),
                ('words_practiced', models.PositiveIntegerField(default=0)),
                ('words_correct', models.PositiveIntegerField(default=0)),
                ('average_accuracy', models.FloatField(default=0.0)),
                ('best_accuracy', models.FloatField(default=0.0)),
                ('first_practice_date', models.DateTimeField(auto_now_add=True)),
                ('last_practice_date', models.DateTimeField(auto_now=True)),
                ('mastery_percentage', models.FloatField(default=0.0)),
                ('text', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='memorization.text')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'text')},
            },
        ),
        migrations.CreateModel(
            name='WeeklyStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('week', models.PositiveIntegerField()),
                ('sessions_count', models.PositiveIntegerField(default=0)),
                ('practice_time', models.PositiveIntegerField(default=0)),
                ('words_practiced', models.PositiveIntegerField(default=0)),
                ('words_correct', models.PositiveIntegerField(default=0)),
                ('average_accuracy', models.FloatField(default=0.0)),
                ('days_practiced', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-year', '-week'],
                'unique_together': {('user', 'year', 'week')},
            },
        ),
    ]
